services:
  nginx:
    build: ./nginx
    ports:
      - "8080:80"
    volumes:
      - ./client/dist:/usr/share/nginx/html       # serve React build
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf 
    networks:
      - backendLoadBalancing
      - frontendLoadBalancing
      - app-net
    depends_on:
      - backend

  frontend:
    build: ./client
    env_file:
      - ./client/.env
    environment:
      - VITE_API_URL=/api
    deploy:
      replicas: 2
    command: npm run build
    volumes:
      - ./client/dist:/app/dist                   
    networks:
      - frontendLoadBalancing
      - app-net
    restart: unless-stopped


  backend:
    build: ./server
    env_file:
      - ./server/.env
    deploy: 
      replicas: 4
    depends_on:
      - mongo
      - redis
    networks:
      - backendLoadBalancing
      - app-net
    environment:
      - PORT=5000
      - REDIS_URL=redis://redis:6379
      - MONGO_URI=mongodb://mongo:27017/mydb
    restart: unless-stopped

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - backendLoadBalancing
    command: ["mongod", "--quiet", "--logpath", "/dev/null"]
    restart: unless-stopped

  redis:
    image: redis
    ports: 
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backendLoadBalancing
    restart: unless-stopped

volumes:
  mongo_data:
  redis_data:

networks:
  backendLoadBalancing:
  frontendLoadBalancing:
  app-net: